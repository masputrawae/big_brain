///==============================================//
//================// CODE.SCSS //================//
@use "../abstracts/mixins" as m;
@use "../abstracts/variables" as v;
// Base code styles
tt,
code:not(pre code),
samp {
  font-size: v.$font__size--3xs;
  background-color: var(--bg-second);
  color: var(--text-first);
  padding: 0.2em 0.4em;
  border-radius: 4px;
}

code,
pre,
samp,
tt {
  font-family: v.$font__family--mono;
  font-weight: 400;
}

pre {
  line-height: 1.6;
  margin-bottom: 1.2em;
  letter-spacing: 0;
}

pre + pre {
  margin-top: 1.2em;
}

// Background and chroma styles
.bg,
.chroma {
  color: var(--code-text);
  background-color: var(--bg-second);
}

.chroma {
  font-size: v.$font__size--xs;
  font-weight: 400;
  overflow-x: auto;
  overflow-y: hidden;
  border: 1px solid var(--border-first);
  border-radius: 0.5rem;
  padding: 1rem;

  code {
    position: relative;

    &::before,
    &::after {
      position: sticky;
      left: 0;
      margin-bottom: 1rem;
      box-shadow: var(--shadow-md);
      color: var(--text-first);
      background-color: var(--bg-second);
      border: 1px solid transparent;
      text-transform: capitalize;
      border-radius: 0.5rem;
      text-align: center;
      @include m.transition(color, border-color, box-shadow);
    }

    &::before {
      content: attr(data-lang);
      display: inline-block;
      padding: 0.2rem 1rem;
    }

    &::after {
      content: "";
      padding: 0;
      border-color: var(--border-first);
      margin-top: 0.25rem;
      display: block;
    }

    &:hover::before,
    &:hover::after {
      box-shadow: var(--shadow-lg);
      border-color: var(--accent-first);
      color: var(--accent-first);
    }
  }

  // General styles
  .x,
  .cl {
    color: var(--text-first);
  }
  .err {
    color: #960050;
    background-color: #1e0010;
  }
  .lnlinks {
    outline: none;
    text-decoration: none;
    color: inherit;
  }

  // Table and line styles
  .lntd,
  .lntable {
    padding: 0;
    margin: 0;
    border: 0;
  }
  .lntd {
    vertical-align: top;
  }
  .lntable {
    border-spacing: 0;
  }
  .hl {
    background-color: var(--code-highlight-bg);
  }

  // Line numbers
  .lnt,
  .ln {
    white-space: pre;
    -webkit-user-select: none;
    user-select: none;
    margin-right: 1rem;
    padding: 0 0.4em;
    color: var(--code-line-number);
    border: 1px solid var(--border-first);
    border-top: none;
    border-bottom: none;
  }

  // Code line
  .line {
    display: flex;
  }

  // Syntax highlighting colors
  .k,
  .kc,
  .kd,
  .kp,
  .kr,
  .kt,
  .no {
    color: var(--code-keyword);
  }
  .kn,
  .nt,
  .o,
  .ow,
  .gd {
    color: var(--code-operator);
  }
  .na,
  .nc,
  .nd,
  .ne,
  .nf,
  .nx,
  .gi {
    color: var(--code-function);
  }
  .l,
  .se,
  .m,
  .mb,
  .mf,
  .mh,
  .mi,
  .il,
  .mo {
    color: var(--code-number);
  }
  .ld,
  .s,
  .sa,
  .sb,
  .sc,
  .dl,
  .sd,
  .s2,
  .sh,
  .si,
  .sx,
  .sr,
  .s1,
  .ss {
    color: var(--code-string);
  }
  .c,
  .ch,
  .cm,
  .c1,
  .cs,
  .cp,
  .cpf,
  .gu {
    color: var(--code-comment);
  }

  // Text styles
  .ge {
    font-style: italic;
  }
  .gs {
    font-weight: bold;
  }
}
